syntax = "proto3";
import "SimpleVO.proto";
option java_package = "io.tradingchain.peppa.proto.payment";
option java_outer_classname = "Payment";

//创建到付啦
message CreateCollectPaymentRequest{
  //接入方key
  string partnerKey = 1;
  //密码
  string password = 2;
  //用户名
  string username = 3;
  //授权码
  string authcode = 4;
  //平台名称
  string platform = 5;
  //交易密码
  string tradePassword = 6;
  //资产名称
  string assetName = 7;
  //资产发行人
  string assetIssuer = 8;
  //转账数量
  string amount = 9;
  //收款人
  string receiver = 10;
  //外部id
  string externalId = 11;
  //外部名称
  string externalName = 12;
}
//创建到付返回信息呀
message CreateCollectPaymentResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}

//创建付付呀
message CreatePrepaidPaymentRequest{
  //接入方key
  string partnerKey = 1;
  //密码
  string password = 2;
  //用户名
  string username = 3;
  //授权码
  string authcode = 4;
  //平台名称
  string platform = 5;
  //交易密码
  string tradePassword = 6;
  //资产名称
  string assetName = 7;
  //资产发行人
  string assetIssuer = 8;
  //转账数量
  string amount = 9;
  //收款人
  string receiver = 10;
  //外部id
  string externalId = 11;
  //外部名称
  string externalName = 12;
}
//创建付付返回
message CreatePrepaidPaymentResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
//查询用户到付列表
message FindCollectPathRequest{
  //接入方key
  string partnerKey = 1;
  //密码
  string password = 2;
  //用户名
  string username = 3;
  //平台名称
  string platform = 4;
  //资产名称
  string assetName = 5;
  //资产发行人
  string assetIssuer = 6;
  //最大发送数量
  string amount = 8;
  //到账币种
  string receiveAssetName = 9;
  string receiveAssetIssuer = 10;
  //到账金额
  string receiveAmount = 11;
  //到账用户地址
  string receiveUserAddr = 12;
}
message FindCollectPathResponse {
  int32 code = 1;
  string msg = 2;
  repeated PathData path = 3;
}
message FindPrepaidPathRequest {
  //接入方key
  string partnerKey = 1;
  //密码
  string password = 2;
  //用户名
  string username = 3;
  //平台名称
  string platform = 4;
  //资产名称
  string assetName = 5;
  //资产发行人
  string assetIssuer = 6;
  //最大发送数量
  string amount = 8;
  //到账币种
  string receiveAssetName = 9;
  string receiveAssetIssuer = 10;
  //到账金额
  string receiveAmount = 11;
  //到账用户地址
  string receiveUserAddr = 12;
}
message FindPrepaidPathResponse {
  int32 code = 1;
  string msg = 2;
  repeated PathData path = 3;
}
message CreateCollectPathPaymentRequest {
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string authcode = 6;
  string assetName = 7;
  string assetIssuer = 8;
  string amount = 9;
  string receiver = 10;
  string receiveAssetName = 11;
  string receiveAssetIssuer = 12;
  string receiveAmount = 13;
  string externalId = 14;
  string externalName = 15;
}
message CreateCollectPathPaymentResponse {
  int32 code = 1;
  string msg = 2;
  PaymentData data = 3;
}
message CreatePrepaidPathPaymentRequest {
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string authcode = 6;
  string assetName = 7;
  string assetIssuer = 8;
  string amount = 9;
  string receiver = 10;
  string receiveAssetName = 11;
  string receiveAssetIssuer = 12;
  string receiveAmount = 13;
  string externalId = 14;
  string externalName = 15;
}
message CreatePrepaidPathPaymentResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData data = 3;
}
message FindPaymentByExternalIdRequest{
  string externalId = 1;
  string externalName = 2;

}
message FindPaymentByExternalIdResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData data = 3;
}
message FindPaymentByIdRequest{
  int64 paymentId = 1;
}
message FindPaymentByIdResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData data = 3;
}
message FindPaymentsByUserRequest {
  string password = 1;
  string username = 2;
  string platform = 3;
  bool pay = 4;
  bool receive = 5;
  int32 page = 6;
  int32 size = 7;
}
message FindPaymentsByUserResponse {
  int32 code = 1;
  string msg = 2;
  repeated PaymentData data = 3;
}
message FindPaymentsByPartnerRequest {
  string partnerKey = 1;
  int32 page = 2;
  int32 size = 3;
}
message FindPaymentsByPartnerResponse {
  int32 code = 1;
  string msg = 2;
  repeated PaymentData data = 3;
}
message FindPaymentsRequest {
  int32 page = 1;
  int32 size = 2;
}
message FindPaymentsResponse {
  int32 code = 1;
  string msg = 2;
  repeated PaymentData data = 3;
}

message PathData {
  string sourceAssetName = 1;
  string sourceAssetIssuer = 2;
  string sourceAmount = 5;
  string destinationAssetName = 3;
  string destinationAssetIssuer = 4;
  string destinationAmount = 6;
  string balance = 7;
}

message PaymentData {
  int64 id = 1;
  int64 createTime = 2;
  string from = 3;
  SimpleAsset payAsset = 4;
  string payAmount = 5;
  string to = 6;
  SimpleAsset receiveAsset = 7;
  string receiveAmount = 8;
  string fee = 9;
  SimpleAsset feeAsset = 10;
  string feeRate = 11;
  PaymentStatus status = 12;
  PaymentType paymentType = 13;
  FeeType feeType = 14;
  string partnerKey = 15;

  enum PaymentStatus {
     PAYING = 0;
     OK = 1;
     FAIL = 2;
  }
  enum PaymentType {
    COMMON = 0;
    BRIDGE = 1;
  }

  enum FeeType {
    COLLECT = 0;
    PREPAID = 1;
    NONE = 2;
  }
}