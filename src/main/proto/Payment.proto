syntax = "proto3";
import "SimpleVO.proto";
option java_package = "io.tradingchain.peppa.proto.payment";
option java_outer_classname = "Payment";

message CreateCollectPaymentRequest{
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string assetName = 6;
  string assetIssuer = 7;
  string amount = 8;
  string receiver = 9;
  string externalId = 10;
  string externalName = 11;
}
message CreateCollectPaymentResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
message CreatePrepaidPaymentRequest{
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string assetName = 6;
  string assetIssuer = 7;
  string amount = 8;
  string receiver = 9;
  string externalId = 10;
  string externalName = 11;
}
message CreatePrepaidPaymentResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
message FindCollectPathRequest{
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string assetName = 6;
  string assetIssuer = 7;
  string amount = 8;
  string receiveAssetName = 9;
  string receiveAssetIssuer = 10;
  string receiveAmount = 11;
}
message FindCollectPathResponse {
  int32 code = 1;
  string msg = 2;
  repeated PathData path = 3;
}
message FindPrepaidPathRequest {
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string assetName = 6;
  string assetIssuer = 7;
  string amount = 8;
  string receiveAssetName = 9;
  string receiveAssetIssuer = 10;
  string receiveAmount = 11;
}
message FindPrepaidPathResponse {
  int32 code = 1;
  string msg = 2;
  repeated PathData path = 3;
}
message CreateCollectPathPaymentRequest {
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string assetName = 6;
  string assetIssuer = 7;
  string amount = 8;
  string receiver = 9;
  string receiveAssetName = 10;
  string receiveAssetIssuer = 11;
  string receiveAmount = 12;
  string externalId = 13;
  string externalName = 14;
}
message CreateCollectPathPaymentResponse {
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
message CreatePrepaidPathPaymentRequest {
  string partnerKey = 1;
  string password = 2;
  string username = 3;
  string platform = 4;
  string tradePassword = 5;
  string assetName = 6;
  string assetIssuer = 7;
  string amount = 8;
  string receiver = 9;
  string receiveAssetName = 10;
  string receiveAssetIssuer = 11;
  string receiveAmount = 12;
  string externalId = 13;
  string externalName = 14;
}
message CreatePrepaidPathPaymentResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
message FindPaymentByExternalIdRequest{
  string externalId = 1;
  string externalName = 2;

}
message FindPaymentByExternalIdResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
message FindPaymentByIdRequest{
  int64 paymentId = 1;
}
message FindPaymentByIdResponse{
  int32 code = 1;
  string msg = 2;
  PaymentData payment = 3;
}
message FindPaymentsByUserRequest {
  string password = 1;
  string username = 2;
  string platform = 3;
  bool pay = 4;
  bool receive = 5;
  int32 page = 6;
  int32 size = 7;
}
message FindPaymentsByUserResponse {
  int32 code = 1;
  string msg = 2;
  repeated PaymentData payments = 3;
}
message FindPaymentsByPartnerRequest {
  string partnerKey = 1;
  int32 page = 2;
  int32 size = 3;
}
message FindPaymentsByPartnerResponse {
  int32 code = 1;
  string msg = 2;
  repeated PaymentData payments = 3;
}
message FindPaymentsRequest {
  int32 page = 1;
  int32 size = 2;
}
message FindPaymentsResponse {
  int32 code = 1;
  string msg = 2;
  repeated PaymentData payments = 3;
}

message PathData {
  string sourceAssetName = 1;
  string sourceAssetIssuer = 2;
  string destinationAssetName = 3;
  string destinationAssetIssuer = 4;
  string amount = 5;
  string balance = 6;
}

message PaymentData {
  string id = 1;
  string createTime = 2;
  string from = 3;
  SimpleAsset payAsset = 4;
  string payAmount = 5;
  string to = 6;
  SimpleAsset receiveAsset = 7;
  string receiveAmount = 8;
  string fee = 9;
  SimpleAsset feeAsset = 10;
  string feeRate = 11;
  PaymentStatus status = 12;
  PaymentType paymentType = 13;
  FeeType feeType = 14;
  string partnerKey = 15;

  enum PaymentStatus {
     PAYING = 0;
     OK = 1;
     FAIL = 2;
  }
  enum PaymentType {
    COMMON = 0;
    BRIDGE = 1;
  }

  enum FeeType {
    COLLECT = 0;
    PREPAID = 1;
    NONE = 2;
  }
}