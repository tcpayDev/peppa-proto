syntax = "proto3";

import "data/BaseResponse.proto";
option java_package = "io.tradingchain.peppa.proto.v1";
option java_outer_classname = "Partner";

message CreatePartnerRequest{
  //apikey
  string partnerKey = 1;
  //签名私钥
  string secret = 2;
  //平台标识
  string platform = 3;
  //接入方简介
  string info = 4;
}

message CreatePartnerResponse{
  int32 code = 1;
  string msg = 2;
  //接入方信息
  PartnerData partner = 3;
}

message UpdatePartnerInfoRequest{
  string partnerKey = 1;
  //签名私钥
  string secret = 2;
  //平台标识
  string platform = 3;
  //接入方简介
  string info = 4;
  //接入方状态
  PartnerStatus status = 5;
}

message UpdatePartnerInfoResponse{
  int32 code = 1;
  string msg = 2;
  //返回接入方信息
  PartnerData partner = 3;
}

message FindPartnerInfoByIdRequest{
  string partnerKey = 1;
}

message FindPartnerInfoByIdResponse{
  int32 code = 1;
  string msg = 2;
  //查询接入方信息
  PartnerData partner = 3;
}

message FindPartnersRequest{
  int32 page = 1;
  int32 size = 2;
}

message FindPartnersResponse{
  int32 code = 1;
  string msg = 2;
  //返回接入方数量
  int32 total = 3;
  //查询接入方信息接口
  repeated PartnerData partners = 4;
}

//接入方资产信任
message PartnerTrustAssetsRequest{
  string partnerKey = 1;
  //资产信任接口
  repeated AssetData assets = 2;
}

message PartnerTrustAssetsResponse{
  int32 code = 1;
  string msg = 2;
}

message PartnerStatusRequest{
  string partnerKey = 1;
}

message PartnerStatusResponse{
  int32 code = 1;
  string msg = 2;
}

message PartnerData{
  //接入方KEY
  string apiKey = 1;
  //接入方platform
  string platform = 2;
  //密钥
  string secret = 3;
  //签名需要的偏移量
  string iv = 4;
  //接入方状态
  PartnerStatus status = 5;
  //接入方介绍
  string info = 6;
}

enum PartnerStatus{
  USED = 0;
  DELETED = 1;
  LOCKED = 2;
}
