syntax = "proto3";

import "SimpleVO.proto";
option java_package = "io.tradingchain.peppa.proto.user";
option java_outer_classname = "User";

//注册用户
message RegistUserRequest {
  //用户名
  string username = 1;
  //密码
  string password = 2;
  //交易密码
  string tradePassword = 3;
  //邀请码
  string inviteCode = 4;
  //请求标识，用于查询
  string externalId = 5;
}

//注册用户返回信息
message RegistUserResponse {
  int32 code = 1;
  string msg = 2;
  //用户公钥
  string addr = 3;
  //授权码
  string authCode = 4;
  //拜占庭
  string token = 5;
}

//信任资产
message TrustAssetsRequest {
  string username = 1;
  //用户授权码
  string authcode = 2;
  //要信任资产列表
  repeated SimpleAsset data = 3;
}

//信任资产
message TrustAssetsByAddrRequest {
  //用户公钥
  string addr = 1;
  //用户授权码
  string authcode = 2;
  //要信任资产列表
  repeated SimpleAsset data = 3;
}

//信任资产返回信息
message TrustAssetsResponse {
  int32 code = 1;
  string msg = 2;
}

//验证用户是否存在
message ValidateUsernameRequest {
  //用户名
  string username = 1;
}

//验证用户是否存在返回
message ValidateUsernameResponse {
  int32 code = 1;
  string msg = 2;
}

//验证密码是否正确
message UserGetAddrRequest {
  //用户名
  string username = 1;
  //密码
  string password = 2;
}

//验证密码是否正确返回
message UserGetAddrResponse {
  int32 code = 1;
  string msg = 2;
  UserData data = 3;
}
//验证交易密码是否正确
message ValidateTradePasswordRequest {
  //用户名
  string username = 1;
  //交易密码
  string tradePassword = 2;
}
//验证交易密码是否正确返回
message ValidateTradePasswordResponse {
  int32 code = 1;
  string msg = 2;
}

//验证拜占庭
message ValidateTokenRequest {
  //用户名
  string username = 1;
  //密码
  string password = 2;
  //token
  string tokenKey = 3;
}

//验证拜占庭是否正确返回
message ValidateTokenResponse{
  int32 code = 1;
  string msg = 2;
}
//验证授权码是否正确
message ValidateAuthcodeRequest{
  //用户名
  string username = 1;
  //密码
  string password = 2;
  //token
  string authcode = 3;
}

//验证授权码是否正确返回
message ValidateAuthcodeResponse{
  int32 code = 1;
  string msg = 2;
}

//修改用户密码
message UpdateUserPasswordRequest{
  //旧密码
  string oldPassword = 1;
  //新密码
  string newPassword = 2;
  //用户名
  string username = 3;
  //授权码
  string authcode = 4;
}


//修改用户密码返回
message UpdateUserPasswordResponse{
  int32 code = 1;
  string msg = 2;
}

//修改用户交易密码
message UpdateUserTradePasswordRequest{
  //旧密码
  string oldPassword = 1;
  //新交易密码
  string newTradePassword = 2;
  //用户名
  string username = 3;
  //授权码
  string authcode = 4;
}

//修改用户交易密码返回
message UpdateUserTradePasswordResponse{
  int32 code = 1;
  string msg = 2;
}

//忘记密码
message ForgetPasswordRequest{
  //新交易密码
  string newPassword = 1;
  //用户名
  string username = 2;
  //授权码
  string authcode = 3;
}

//忘记交易密码
message ForgetTradePasswordRequest{
  //新交易密码
  string newTradePassword = 1;
  //用户名
  string username = 2;
  //授权码
  string authcode = 3;
}

message ForgetPasswordOrTradePasswordResponse{
  string message = 1;
  int32 code = 2;
}

//修改用户授权码
message UpdateUserResetAuthcodeRequest{
  //用户名
  string username = 1;
  //交易密码
  string tradePassword = 2;
  //拜占庭
  string tokenKey = 3;
}

//修改用户授权码返回
message UpdateUserResetAuthcodeResponse{
  int32 code = 1;
  string msg = 2;
  string authCode = 3;
}

//修改用户拜占庭
message UpdateUserResetTokenRequest{
  //用户名
  string username = 1;
  //交易密码
  string tradePassword = 2;
  //授权码
  string authcodeKey = 3;
}

//修改用户拜占庭返回
message UpdateUserResetTokenResponse{
  int32 code = 1;
  string msg = 2;
  string token = 3;
}

//通过外部externalid查询用户
message FindUserByExternalIdRequest {

  //外部扩展标识Id
  string externalId = 1;
  //外部扩展标识
  string externalName = 2;
}

//通过外部externalid查询用户 返回
message FindUserByExternalIdResponse{
  int32 code = 1;
  string msg = 2;
  UserData data = 3;
}

//查询用户列表
message FindUsersRequest{
  //页码
  int32 page = 1;
  //条目
  int32 size = 2;
}

//查询用户列表返回
message FindUsersResponse{
  int32 code = 1;
  string msg = 2;
  //返回总条数
  int32 total = 3;
  //用户集合列表
  repeated UserData data = 4;
}

//通过partnerKey查询用户列表
message FindUserByPartnerRequest{
  string partnerKey = 1;
  int32 page = 2;
  int32 size = 3;
}

//返回partnerKey查询用户列表
message FindUserByPartnerResponse{
  int32 code = 1;
  string msg = 2;
  int32 total = 3;
  repeated UserData data = 4;
}

//获取用户信息
message FindUserBalanceRequest{
  //用户名
  string username = 1;
}

//获取用户信息返回
message FindUserBalanceResponse{
  int32 code = 1;
  string msg = 2;
  //返回资产
  Balance data = 3;
}

message FindBalanceByAddrRequest{
  string addr = 1;
}

message FindBalanceByAddrResponse{
  int32 code = 1;
  string msg = 2;
  //返回资产
  Balance data = 3;
}

//用户信息
message UserData {
  int64 userId = 1;
  //用户名
  string username = 2;
  //邀请码
  string inviteCode = 3;
  //邀请人
  string inviteUser = 4;
  //公钥
  string addr = 6;
  //创建时间
  int64 createTime = 7;
}
//资产详情
message Balance {
  //资产名称
  string total = 1;
  repeated BalanceData data = 2;
}
//资产详情
message BalanceData{
  //资产名称
  string name = 1;
  //资产发行者
  string issuer = 2;
  //是否为基础资产
  bool isBasic = 3;
  //拥有数量
  string amount = 4;
  //估值
  string counter = 5;
}